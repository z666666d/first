http概述
	Web浏览器与Web服务器之间的一问一答交互过程必须遵循一定的规则，这个规则就是HTTP协议

	HTTP ：Hyper Text Transfer Protocol 超文本传输协议
	他是TCP/IP协议的一个应用层协议，用于定义web浏览器与web服务器之间交换数据的过程以及数据本身的格式

	HTTP协议版本：
	1.0特点：每次请求服务器上的资源都要建立新的连接，响应完毕会关闭连接。是无状态的协议
	1.1特点：在一次TCP/IP连接的基础上可以发出多次请求并得到多次响应。比1.0版本多了一些请求和响应头

	当在html文件中有<img>标签或超链接时,浏览器解析到<img>标签,会向服务器发送请求
	点击超链接时,也同样会触发浏览器向服务器发送http请求

请求和响应
	请求:
	请求行
	请求消息头
	空行
	请求体
	get和post

	响应:
	响应行
	响应消息头
	空行
	响应体

	响应行:HTTP版本  状态码  原因叙述
	状态码:
	100~199		表示成功接收请求,要求客户端继续提交下一次请求才能完成整个处理过程
	200~299		表示成功接受请求并已完成整个处理过程
	300~399		为完成请求,客户需进一步细化请求.如:请求的资源已经移动到一个新的地址
	400~499		客户端的请求有错误
	500~599		服务器端出现错误
	常用状态码:
	200:正常
	302/307:被请求的文档已被临时移动到别处,新的URL在Location响应头中给出
	304:表示客户机缓存的版本是最新的,可以继续使用,无需到服务器请求
	404:服务器上不存在客户所请求的资源
	500:服务器端的程序发生错误

请求消息头详解:
	
	使用消息头,可以实现HTTP客户机与服务器之间的条件请求和应答
	消息头相当于服务器和浏览器之间的一些暗号指令
	每个消息头包含一个头字段名称,然后依次是冒号,空格,值,回车换行符

	消息头字段名是不区分大小写的,但是习惯上每个单词的第一个字母大写

	整个消息头部分中的各行消息头可按任意顺序排列
	消息头可以分为通用信息头,请求头,响应头,实体头等四类
	许多请求头字段都允许客户端在值部分指定多个可接受的选项,多个选项之间用逗号分隔
	有些头字段可以出现多次,如响应消息中可以包含多个"Warning"字段

	请求消息头:向服务器传递附加信息
	常用请求头:
	Accept:浏览器可以接受的MIME类型(文件系统中用文件扩展名区分数据的类型.网络上用MIME类型来区分数据类型)
		在Tomcat\conf\web.xml中,有后缀名对应的MIME类型
		MIME类型:大类型/小类型   
	Accept-Charset:浏览器支持的字符集
	Accept-Encoding:浏览器能够进行解码的数据压缩方式:如gzip
	Accept-Language:浏览器所希望的语言种类,当服务器能提供一种以上的语言版本时用到,可以再浏览器中设置
	Host:请求的主机和端口号
	Referer:是一个URL地址,取值是当前页面之前的那个页面地址的URL.用于防盗链
	Content-Type:告诉浏览器请求体的MIME类型.默认值为:application/x-www-form-urlencoded 对应form表单的enctype属性
			post请求才有请求体
	If-Modified-Since:通知服务器,缓存的文件最后修改的时间
	User-Agent:浏览器类型
	Content-Length:请求消息体的长度
	Connection:表示是否需要持久连接.值为"Keep-Alive"或HTTP1.1时为持久连接
	Data:请求时间
	Cookie:最重要的请求头信息(与会话有关)

响应消息头
	
	Location:URL,通知客户端,只是新的资源地址(结合302/307状态码使用,请求重新定向)
	Server:服务器类型
	Content-Encoding:响应体的压缩编码方式,常用的是gzip
	Content-Length:响应体的数据大小
	Content-Language:服务器发送来的文本语言
	Content-Type:响应体的MIME类型
	Last-Modified:文件最后修改的时间
	Refresh:浏览器自动自动刷新的时间间隔,单位是秒.后面加上一个URL,表示几秒后跳转到URL地址
	Content-Disposition:告诉客户端以下载的形式打开资源  值为:attachment;filename:文件名
	Set-Cookie:服务器端发送的cookie(与会话有关)
	Expires:  网页的有效时间  单位是毫秒 相对于1970年的毫秒值
	Cache-Control:no-cache   (1.1)
	Pragma:no-cache	  (1.0)          三个头字段同时使用,通知客户端不要缓存





















