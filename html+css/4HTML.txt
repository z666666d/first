概述
	html：超文本标记语言，最基础的网页语言
	用标签来定义的语言，代码都是有标签组成
	html不用区分大小写,但一般推荐使用小写
	代码由<html>开始，到</html>结束,由头部分<head></head>
	和体部分<body></body>两部分组成
	头部分中通常是非Html页面增加一些辅助或属性信息
	它里面的内容会最先加载
	体部分式真正存放页面数据的地方
	html文件后缀可为.htm或.html

标签
	多数的标签是有开始标签和结束标签的,如<head></head>
	<title></title>  <font></font>等
	也有个别标签因为只有单一功能,或者没有要修饰的内容,可以在标签内结束
	如<br />换行	<hr />一条水平线

	要对标签中修饰的内容进行更丰富的操作,就要用到标签中的属性
	通过属性值的改变来增加更多的效果
	属性与属性值之间用等号"="连接,属性值用双引号或者单引号或者不用引号
	一般都使用双引号或者按照公司规范

	标签两种格式
	<标签名 属性名="属性值">内容</标签名>
	<标签名 属性名="属性值" />

	标签的操作思想
	为了操作数据,都需要对数据进行不同的标签封装,通过标签中的属性对封装的数据进行操作
	标签就相当于一个容器,对容器中的数据进行操作就是在不断地改变容器的属性值

Html常用工具
	前端一般使用Dreamweaver(DW)用于网页制作和管理的编辑软件
	做后端可以直接用eclipse进行html编辑

Html基础标签
	<html></html>在该标签之间的文本用于网页描述
	
	<title></title>网页的标题,显示在浏览器网页标签中,网页标题定义在头部分
	
	<h1></h1>该标签内的文本被显示为标题,在html中用<h1>-<h6>来定义标题
	<h1>最大,<h6>最小.在标签后浏览器会自动在标题前后添加空行
	注意,标题文本在显示时会变成粗体大号文字.但不要为了产生粗体或大号文字而使用标题
	要确保该标签仅用于标题.
	搜索引擎会使用标题为网页的结构和内容编制索引,用户也通过标题快速浏览网页
	
	<p></p>在该标签中的文本显示为段落,浏览器自动在段落前后添加空行

	<hr />水平线标签,可用于对网页的内容进行分割

	<br />换行标签,在需要换行时使用此标签

	html中的注释:<!--注释内容-->

样式-style属性
	
	在html中文本居中,字体,文本颜色,背景颜色等标签属性逐渐被废弃
	而使用CSS中的样式来对这些内容进行定义
	可以通过html中的style属性直接将样式添加进html文件中
	也可以间接的在独立的样式表(CSS文件)中进行定义

格式化标签
	
	1.物理格式
	有粗体,大号字体,斜体,上下标,下划线等.
	由于这些物理样式标签对紧接的文本产生的强烈效果

	2.计算机输出标签
	<code>		定义计算机代码。
	<kbd>		定义键盘码。
	<samp>		定义计算机代码样本。
	<tt>		定义打字机代码。
	<var>		定义变量。
	<pre>		定义预格式文本。
	这些标签定义的文本大多会呈现出特殊的样式,这些内容一般拥有实际的语义
	如果只是为了达到视觉效果而使用这类标签,建议使用样式表,效果更加丰富

	3.基于内容的格式-引用

	<abbr>		定义缩写
	定义一个长文本的缩写形式,可以使用title属性将完整版写入
	这样讲鼠标放到缩写上时,就会显示出该缩写的完整版

	<address>	定义文档或文章的作者/拥有者的联系信息。
	如果 <address> 元素位于 <body> 元素内，则它表示文档联系信息。
	如果 <address> 元素位于 <article> 元素内，则它表示文章的联系信息。
	<address> 元素中的文本通常呈现为斜体。大多数浏览器会在 address 元素前后添加折行。
	注意:<address>元素一般不定义通讯地址,除非地址也是联系方式的一部分
	<address>一般定义在<footer>标签中(页脚标签:通常包含文档的作者、版权信息、使用条款链接、联系信息等等。)

	<bdo>		定义文本书写的方向
	dir属性 该属性有两个值
	ltr:从左向右写
	rtl:从右向左写
	bdo元素会覆盖默认的文本方向

	<blockquote>	定义块引用
	<q>		定义短引用
	所有文本都会从常规文本中分离出来，经常会在左、右两边进行缩进（增加外边距），
	而且有时会使用斜体。也就是说，块引用拥有它们自己的空间。
	注意:块引用中包含的必须是块级元素,如段落<p>等,短引用用<q>标签定义
	<q>标签在本质上与<blockquote>标签是一致的,只是<q>标签用于简短的行内引用
	<q>元素在显示时用引号来呈现,以引号作为开始和结束
	cite属性   属性值为URL   用于定义引用的来源

	<cite>		定义引用.引证
	<cite> 标签通常表示它所包含的文本对某个参考文献的引用，比如书籍或者杂志的标题。
	文本通常以斜体显示
	可以将其定义在一个<a>标签中,从而将超链接指向另一个网址

HTML CSS
	当浏览器读到一个样式表，它就会按照这个样式表来对文档进行格式化。
	有以下三种方式来插入样式表：
	
	1.外部样式表
	当样式需要被应用到很多页面的时候，外部样式表将是理想的选择。
	使用外部样式表，你就可以通过更改一个文件来改变整个站点的外观。
	外部样式表通过<link />标签来链接
	<link>标签属性:
	rel	规定当前文档与被链接文档之间的关系。
	type	规定被链接文档的 MIME 类型。
	href	规定被链接文档的位置。
	链接外部样式表时<link rel="stylesheet" type="text/css" href="URL" />

	2.内部样式表
	当单个文件需要特别样式时，就可以使用内部样式表。
	可以在 head 部分通过 <style> 标签定义内部样式表。

	3.内联样式
	当特殊的样式需要应用到个别元素时，就可以使用内联样式。
	使用内联样式的方法是在相关的标签中使用样式属性。
	样式属性可以包含任何 CSS 属性。
		
列表标签
	

	自定义列表标签<dl></dl>

	上层项目<dt></dt>
	下层项目<dd></dd>下层项目的内容会被自动缩进

	有序和无序项目列表
	有序<ol>
	无序<ul>
	有序和无序的条目都用<li>标签来封装,而且都有缩进效果
	列表项内部可以使用段落、换行符、图片、链接以及其他列表等等。

图像标签
	
	<img />标签 该标签为内部闭合标签
	必需属性:
	src	资源路径

	alt	替换文本
	用该属性为图像定义一串预备的可替换的文本
	在浏览器无法载入图像时，替换文本属性告诉读者她们失去的信息。
	
	可选属性:
	height		图片的长度
	width		图片的宽度
	border		边框
	
	ismap		将图像定义为服务器端图像映射。
	当用户在 ismap 图像上单击了某处时，
	浏览器会自动把鼠标的 x、y 位置（相对于图像的左上角）发送到服务器端。
	特殊的服务器端软件（在本例中是 demo_form.asp 程序）可以根据这些坐标来做出响应。
	使用该属性将图像变成带有可点击区域的图像。
	通过点击不同的区域获得服务端发送来的URL数据

	longdesc 属性规定指向图像描述信息页面的 URL。
	作用于alt属性类似,用于指向一个描述图像信息的文档,
	于alt相比,该属性允许更长的描述性文字
	注:目前的常见浏览器都还没有支持 longdesc 属性

	usemap 属性定义客户端的图像映射,通过点击不同的区域链接到不同的文件中
	
表格标签
	
	表格标签为<table>
	属性:
	边框:border
	边框颜色:bordercolor
	cellpadding:单元格内边距
	cellspacing:单元格之间的距离
	表格宽度:width  为数字则为像素值,为百分比时随浏览器窗口大小改变

	组成标签:
	表格标题<caption>
	表头<th>对表格的第一行或者第一列进行格式化,粗体居中,该标签并不常用
	行标签<tr>
	单元格标签<td>写在行标签里面,可以理解为现有行,然后在行里加单元格

	合并单元格
	用到<td>或者<th>标签的属性
	行的单元格合并colspan 属性值为几就合并该行几个单元格
	列的单元格合并rowspan 属性值为几就合并几个单元格

	表格<table>标签的下一级标签为<tbody>
	该标签不定义也会默认存在
	表格需要全部下载完毕才会显示,
	用<tbody>标签可以分段下载,下载完一个<tbody>行就显示一行
	该标签在表格很大时比较实用

超链接标签
	
	<a></a>该标签用于连接资源
	
	href属性
	当有了href属性才有了点击效果
	href的属性值不同,解析的方式也不同

	属性值为空时,访问的是标签中的地址.
	属性值中有地址时,按属性中的地址访问
	如果在该属性值中没有指定过任何协议,
	解析时使用的是默认的协议,默认协议时file协议

	target属性
	该属性规定在何处打开链接文档
	"_blank"在新窗口中打开

	链接本地文件
	将文件的路径作为href的属性值
	
	地址加密
	浏览器遇到无法解析的协议时,会自动去找可以解析该协议的软件
	如迅雷的thunder协议只有迅雷客户端能够解析,
	其实他的资源地址也是http协议,加密后只能用迅雷客户端下载

	取消超链接点击后的默认效果
	将href属性的属性值设置为"javascript:void(0)"
	这样点击后没有任何效果,可以加入自定义效果
	
	超链接定位标记(专业术语:锚)
	定义一个标签<a name="mao">锚</a>
	设置好锚的name
	再定义一个<a href="#mao">超链接</a>
	这样点击超链接就会自动跳转到锚的位置
	注意:必须要在href里加上#,否则会加上file协议找文件资源
	在定义锚时,也可以用id属性代替name属性

块元素
	在HTML中,元素通常被定义成块级元素或内联元素
	块级元素通常在浏览器中显示时由新行开始和结束
	如:<h1>,<p>,<ul>,<table>等
	内联元素在显示时通常不会以新行开始
	如:<b>,<td>,<a>,<img>等

	HTML分组标签
	1.<div>  该标签可以定义文档的分区或节,将文档分割成独立,不同的部分.
	使用id或者class来标记<div>,可以使该标签的作用更加有效
	id属性只能标识单独唯一的元素.class属性标识的是一类元素
	类如,可以将一类元素标识上class属性.再对其进行统一的格式化

	2.<span>  标签被用来组合文档中的行内元素
	使用 <span> 来组合行内元素，以便通过样式来格式化它们。
	<span>没有固定的格式表现,只有对它应用样式时,才会产生视觉上的变化
	<span>标签可用id或class属性来标识,进行统一的格式化
	也可以对其父类标签用id或class属性标识

类
	在HTML中可以用class属性分类(设置类),使我们能够为元素的类定义CSS样式
	为相同的类设置相同的样式,或者为不同的类设置不同的样式。
	类如对块元素<div>和<span>进行分类并进行样式设置

布局
	三种布局方式
	1.使用<div>进行html布局
	对样式不同的分区进行id属性定义,然后再<head>标签中进行CSS样式设置

	2.html5布局
	在html5中提供了新的语义元素对网页的不同部分进行了定义
	<header>	定义文档或节的页眉
	<nav>		定义导航链接的容器
	<section>	定义文档中的节
	<article>	定义独立的自包含文章
	<aside>		定义内容之外的内容(如侧栏)
	<footer>	定义文档或节的页脚
	<details>	定义额外的细节
	<summary>	定义details元素的标题

	在<body>标签中用这些标签对内容进行定义
	让后在<head>中进行CSS样式设置

	3.使用表格进行布局
	注释：<table> 元素不是作为布局工具而设计的。 
	<table> 元素的作用是显示表格化的数据。 
	使用 <table> 元素能够取得布局效果，
	因为能够通过 CSS 设置表格元素的样式

响应式设计
	RWD(响应式web设计)
	能以可变的尺寸传递网页,对于平板和移动设备是必须的

	两种创建响应式web的方法
	1.自己进行创建
	2.使用现成的CSS框架:Bootstrap
	Bootstrap是最流行的开发响应式web的HTML,CSS,和JS框架。
	Bootstrap可以开发在任何尺寸都外观出众的站点:显示器,笔记本电脑,平板电脑或手机

html框架
	<frameset>	框架结构标签
	该标签定义如何将窗口分割为标签,代表一系列行或列
	两个可选属性
	cols和rows,属性值为百分比.分别定义列和行的数量以及占窗口的比例

	通过使用框架，可以在同一个浏览器窗口中显示不止一个页面。
	每份HTML文档称为一个框架，并且每个框架都独立于其他的框架。

	框架的缺点:开发者需要有多个html文件,且很难打印整张页面

	<frame>		框架标签  用于定义frameset下的一个特定标签
	属性
	frameborder	规定是否显示框架周围的边框,属性值为0或1
	出于实用性方面的原因，最好不用设置该属性，而使用 CSS 来应用边框样式和颜色。

	marginheight	规定框架内容与框架的上下边之间的距离,属性值为像素值

	marginwidth	规定框架内容与框架左右边之间的距离.属性为像素值

	name		定义框架的名称,该属性在js中作为引用元素或链接目标

	noresize	规定用户无法调整框架的大小
	假如一个框架有可见边框，用户可以拖动边框来改变它的大小。
	为了避免这种情况发生，可以在 <frame> 标签中加入：
	noresize="noresize"。

	scrolling	规定是否在框架中显示滚动条
	yes  始终显示   no  始终不显示   auto   内容大于框架时显示
	默认为需要时显示

	src		规定在框架中显示的文件URL

	混合框架.在<frameset>标签中再加入<frameset>标签

	框架和其他结构的混合使用
	如:导航框架:在一个框架A中设置超链接.在框架B中显示,设置框架B的name,用超链接的target属性
	跳转至框架内的指定节,在文档中加入锚,在框架frame的src属性URL末尾加上#锚
	导航框架跳转至指定节:在框架A中设置超链接指向指定的锚,没有锚的超链接会自动跳转至文档开头

内联框架
	
	<iframe>	该标签为内联框架标签,用于在网页内显示网页

	添加内联框架的语法
	<iframe src="URL"></iframe>

	拥有<frame>标签所有的属性

	html5的新属性
	
	sandbox属性	对内联框架特定限制的设置
	属性值
	""			为空字符串时.应用所有限制
	allow-same-origin	允许 iframe 内容被视为与包含文档有相同的来源。
	allow-top-navigation	允许 iframe 内容从包含文档导航（加载）内容。
	allow-forms		允许表单提交。
	allow-scripts		允许脚本执行。
	sandbox 属性的值既可以是一个空字符串（应用所有的限制），
	也可以是空格分隔的预定义值列表（将移除特定的限制）。

	seamless 属性
	规定了 <iframe> 看上去像是包含文档的一部分（无边框或滚动条）。
	仅有部分浏览器支持

	srcdoc 属性	规定页面的 HTML 内容显示在行内框架中。
	该属性与 sandbox 和 seamless 属性一同使用。
	如果浏览器支持该属性,该属性规定的内容会覆盖src属性中规定的内容
	主流浏览器中仅有IE不支持该属性

背景设置
	<body>标签拥有两个设置背景的属性,背景可以是颜色或者图像
	
	1.bgcolor	该属性可以将背景设置为某种颜色
	属性值可以是十六进制数、RGB 值或颜色名。
	<body bgcolor="#000000"> 
	<body bgcolor="rgb(0,0,0)"> 
	<body bgcolor="black">
	这三种方式显示的都是黑色

	2.background	该属性将背景设置为图像,属性值为"URL"
	背景图像可以为jpg或gif格式

	这种设置不推荐使用,应使用CSS中的层叠样式表来定义

脚本
	<script> 标签用于定义客户端脚本，比如 JavaScript。
	script元素既可包含脚本语句，也可通过src属性指向外部脚本文件。
	JavaScript最常用于图片操作、表单验证以及内容动态更新。

	必需属性
	type		指示脚本的 MIME 类型。

	可选属性:
	async		规定异步执行脚本(仅适用于外部脚本)
	defer		规定是否对脚本执行进行延迟，直到页面加载为止。
	这两个属性的使用:
	如果 async="async"：脚本相对于页面的其余部分异步地执行,一边解析页面,一边执行脚本
	如果不使用 async 且 defer="defer"：脚本将在页面完成解析时执行
	如果既不使用 async 也不使用 defer：先执行脚本,在继续解析页面

	charset		规定在外部脚本文件中使用的字符编码
	如果外部文件中的字符编码与主文件中的编码方式不同，就要用到 charset 属性
	默认的字符编码是 ISO-8859-1。拉丁字母表的字符编码
	其他常用的字符集:UTF-8 - Unicode 字符编码   
	值可以是任何一个ISO标准字符集编码的名称。
	该属性与src属性一起使用,告诉浏览器用来编码这个 javascript 程序的字符集

	src属性		规定外部脚本文件的 URL。

	一些老旧的浏览器并不支持客户端脚本
	这时就要用到<noscript>标签,用来定义在脚本未被执行时的替代内容（文本）。

	注:如果浏览器支持脚本，那么它不会显示出 noscript 元素中的文本。
	无法识别 <script> 标签的浏览器会把标签的内容显示到页面上。
	为了避免这种情况,一般将脚本内容隐藏在注释中
	老式浏览器会忽略注释,而新式浏览器则懂得执行这些隐藏在注释中的脚本

头部分
	<head>标签用于标识html文件的头部分
	头部分内的元素可包含脚本，指示浏览器在何处可以找到样式表，提供元信息，等等。

	<title> 标签定义文档的标题。
	该标签在html文件中是必需的.
	title 元素能够： 
	定义浏览器工具栏中的标题 
	提供页面被添加到收藏夹时显示的标题 
	显示在搜索引擎结果中的页面标题

	<base>标签规定页面上所有连接的默认地址或默认目标
	通常情况下,浏览器会从当前文档的URL中寻找相对URL指向的资源
	使用 <base> 标签可以改变这一点。
	定义后浏览器会使用指定的基本 URL 来解析所有的相对 URL。
	这其中包括 <a>、<img>、<link>、<form> 标签中的 URL。
	必要属性:href	规定页面中所有相对链接的基准 URL。
	可选属性:target		规定在哪个窗口打开,默认为当前窗口

	<link>标签用于定义文档与外部资源之间的关系,最常用于链接样式表
	href	URL	
	rel	文档与外部资源的关系	常用:stylesheet(样式表)
	type	被链接文档的 MIME 类型		常用:text/CSS

	<mate>标签用于告诉浏览器关于文档的附加信息
	<mate>标签中的内容以键/值对的形式存在
	content属性定义与http-equiv或name属性相关的元信息
	content 属性始终要和 name 属性或 http-equiv 属性一起使用。
	http-equiv属性的值:
	content-type	告诉浏览器接收的文件类型
	等
	name属性的值:
	author		作者
	keywords	关键字
	generator	编辑软件
	description	描述内容
	等

	<mate http-type="content-type" content="text/html charset=UTF-8">告诉浏览器文件格式,并设置字符集
	<mate http-type="refresh" content="5 url=http://www.w3school.com.cn">网页5秒后重定向至url指向的资源

	<script>标签定义客户端脚本

	<style>标签定义样式,必要属性type,该属性的唯一值"text/css"
	可以直接在标签内定义样式,也可以用<link>标签链接一个外部样式表

字符实体
	在html中,某些字符是预留的,如<>会被浏览器认为是标签
	如果想要使用这些预留的字符,就要用到字符实体
	表示时为&+name或&#+number
	注意,字符实体对大小写敏感

	在html中,多余的空格会被删除,只保留一个空格
	如果想要写10个空格就要用到字符实体:&nbsp或&#160

	常见字符实体
	空格		&nbsp
	<		&lt
	>		&gt
	&		&amp
	"		&quot

表单
	<form>	用于收集用户的输入
		属性
		action		规定当提交表单时向何处发送表单数据
		accept-charset	规定服务器用哪种字符集处理表单数据
		autocomplete	规定表单是否应该启用自动完成功能，属性值为on/off
		enctype		规定在发送到服务器之前应该如何对表单数据进行编码，
			application/x-www-form-urlencoded	默认值。对所有字符进行编码
			multipart/form-data			不对字符编码，包含文件上传控件时必须使用
			text/plain				空格转换为 "+" 加号，但不对特殊字符编码。
		 method		规定如何发送表单数据，两种方式：get(默认)和post
		 两个方法的区别:
		 1.get方法提交的信息显示在地址栏中
		 post方法提交的信息不显示在地址栏中
		 2.get方法对于敏感信息不安全
		 post方法对于敏感信息安全
		 3.get方法不能用于大体积数据,因为地址栏存储体积有限
		 post方法可以提交大体积数据
		 4.get方法将信息封装到请求行中
		 post方法将信息封装到请求体中

		 在服务端的区别
		 如果提交中文到tomcat服务器,服务器使用默认的iso8859-1解码会出现乱码
		 再通过iso8859-1进行编码,用指定的中文码表进行解码即可
		 这种方法get和post都有效
		 但是,用post提交中文时,可以直接使用服务端对象request的setCharacterEncoding方法
		 直接设置指定的中文码表就可以将中文数据解析出来.这个方法只能用于请求体中数据的解码
		 所以表单建议使用post方式提交

		 和服务端交互的三种方式:
		 1.地址栏输入URL  get
		 2.超链接	get
		 3.表单		get/post

		 name		规定表单的名称,提供了一种在脚本中引用表单的方法
		 novalidate	规定当提交表单时不对其进行验证
		 target		规定在何处打开 action URL
			
	
	表单中包含的元素
	1.<input>标签用于收集用户数据
		根据不同的 type 属性值，输入字段拥有很多种形式。

		type属性值
		button	定义可点击按钮（多数情况下，用于通过JavaScript启动脚本）。
		checkbox   定义复选框。
		file	定义输入字段和 "浏览"按钮，供文件上传。
		hidden	定义隐藏的输入字段。
		image	定义图像形式的提交按钮
		password	定义密码字段。该字段中的字符被掩码
		radio	定义单选按钮。
		reset	定义重置按钮。重置按钮会清除表单中的所有数据。
		submit	定义提交按钮。提交按钮会把表单数据发送到服务器。
		text	定义单行的输入字段，用户可在其中输入文本。默认宽度为20个字符

		html5中新的type值：不支持的浏览器显示为text类型
		email		用于应该包含 e-mail 地址的输入域，浏览器自动检测格式
		url		用于应该包含 URL 地址的输入域，浏览器自动检测格式
		number		用于应该包含数值的输入域，可以用属性限制数字的大小区间，间隔，以及默认值
		range		用于应该包含一定范围内数字值的输入域，显示为滑动条
		search		用于搜索域，显示为常规文本域
		color		用于应该包含颜色的输入字段，如果浏览器支持，会出现颜色选择器
		tel		用于应该包含电话号码的输入字段
		时间选择器      有多种类型的时间格式可供选择
		date - 选取日、月、年
		month - 选取月、年
		week - 选取周和年
		time - 选取时间（小时和分钟）
		datetime - 选取时间、日、月、年（UTC 时间）
		datetime-local - 选取时间、日、月、年（本地时间）
		

		alt属性  定义图像的替代文本 只能与 <input type="image"> 配合使用
		
		autofocus 属性   自动获取焦点  （不适用于 type="hidden"）
		
		autocomplete 属性    自动完成功能  属性值为on/off。基于之前键入过得值，自动完成键入
		
		checked  属性	规定此元素首次加载时被选中，
		与 <input type="checkbox"> 或 <input type="radio"> 配合使用。
		
		form属性规定 input 元素所属的一个或多个表单。
		属性值必须是其所属的表单id。利用这个属性，可以将表单元素定义在表单外

		formaction 属性适用于 type="submit" 以及 type="image"
		submit按钮或image按钮会将表单信息发送到action指定的页面
		formaction可以覆盖action，将信息发送到formaction指定的页面

		formenctype  属性与 type="submit" 和 type="image" 配合使用
		覆盖form的enctype属性,修改编码或不编码

		formmethod   该属性与 type="submit" 以及 type="image" 配合使用。
		覆盖 form 元素的 method 属性。

		formnovalidate    覆盖 form 元素的 novalidate 属性
		提交表单时按钮不会执行验证过程

		formtarget    覆盖 form 元素的 target 属性
		属性与 type="submit" 以及 type="image" 配合使用。

		width和height   定义 input 字段的高度。（适用于 type="image"）

		list    引用数据列表，其中包含输入字段的预定义选项。

		name	规定 input 元素的名称，用于对提交到服务器后的表单数据进行标识
		或者在客户端通过 JavaScript 引用表单数据
		只有设置了 name 属性的表单元素才能在提交表单时传递它们的值

		placeholder  提供可描述输入字段预期值的提示信息
		该提示会在输入字段为空时显示，并会在字段获得焦点时消失

		value	规定 input 元素预定义的值

		src	只能且必须与 <input type="image"> 配合使用
		规定作为提交按钮显示的图像的 URL

		限制输入的属性：

		disabled 属性规定应该禁用 input 元素。
		被定义了的元素即不可使用，也不可点击，直到满足某些其他的条件为止
		然后，就需要通过 JavaScript 来删除 disabled 值，将 input 元素的值切换为可用。
		disabled 属性无法与 <input type="hidden"> 一起使用。

		max和min	限制输入的最大值和最小值，配合使用可定义输入范围
		用于以下 <input>type：number, range以及时间选择器

		maxlength   规定输入字段的最大长度，以字符个数计，与text和password配合使用

		multiple	规定输入字段可选择多个值，在email以及file类型使用

		pattern		规定用于验证输入字段的模式(正则表达式)

		readonly	规定输入字段为只读
		只读字段是不能修改的。不过，用户仍然可以使用 tab 键切换到该字段，还可以选中或拷贝其文本。

		required	规定必需在提交之前填写输入字段(必须填写)

		size	规定输入字段的宽度

		step	规定输入字的的合法数字间隔

	2.<select>可创建单选或多选下拉菜单

		属性:
		autofocus	自动获得焦点
		disabled	禁用该下拉列表
		form		属性值为所属form的id
		multiple	可以选择多个
		name		下拉菜单名称
		size		下拉菜单窗口大小
		require		必须填写

		<option>定义下拉菜单的选项,定义在<select>标签内
		属性:
		value		规定在表单被提交时被发送到服务器的值

	3.<textarea>定义多行输入字段（文本域）
		可以通过 cols 和 rows 属性来规定 textarea 的尺寸，
		不过更好的办法是使用 CSS 的 height 和 width 属性

	4.<button>定义一个按钮
		在<button>标签内部可以放置文本或图像等
		需要规定type类型
		IE是button,其他浏览器是submit

	html新增元素
	1.<datalist> 定义选项列表,不会被显示出来,而仅仅是作为合法的输入值列表
	用input元素的list属性来绑定<datalist>的id

	2.<output>定义不同类型的输出，比如脚本的输出

	3.<keygen>

服务器客户端校验
	如果在客户端进行了增强型校验,服务端为了保证安全性.还要再次校验
	服务端做了增强型校验,客户端为了提高用户上网体验效果以及减轻服务端压力.也要进行校验






	
